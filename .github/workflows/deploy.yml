#.github/workflows/deploy.yml
name: "Deploy"

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Configure AWS Credentials
      # You will need to replace <IAM_ROLE> with the IAM role ARN you created in the previous step
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::780690093991:role/github-actions
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Setup Go environment
        uses: actions/setup-go@v4.0.1

      # This step builds the Go application and creates a zip file containing the binary
      # It is important to note that the binary must be named "bootstrap"
      - name: Build Go application
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o bootstrap main.go
          zip lambda-handler.zip bootstrap

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Output ref and event_name
        run: |
          echo ${{github.ref}}
          echo ${{github.event_name}}

        # On push to "main", build or change infrastructure according to Terraform configuration files
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false

      - name: Output API Gateway invocation URL
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform output api_endpoint
